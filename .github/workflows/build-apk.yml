name: Build and Release Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Build React app
      run: |
        cd client
        npm run build
        
    - name: Install Capacitor CLI globally
      run: npm install -g @capacitor/cli
      
    - name: Create missing cordova variables file
      run: |
        cd client
        mkdir -p android/capacitor-cordova-android-plugins
        touch android/capacitor-cordova-android-plugins/cordova.variables.gradle
        echo "// Generated cordova variables file" > android/capacitor-cordova-android-plugins/cordova.variables.gradle
        
    - name: Sync Capacitor (with retry)
      run: |
        cd client
        npx cap sync android || (
          echo "First sync failed, trying to recreate android platform..."
          rm -rf android
          npx cap add android
          npx cap sync android
        )
        
    - name: Make gradlew executable
      run: chmod +x client/android/gradlew
      
    - name: Build Android APK
      run: |
        cd client/android
        ./gradlew assembleDebug --stacktrace
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: jp-hosting-debug.apk
        path: client/android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: JP Hosting v${{ github.run_number }}
        body: |
          🚀 **JP Hosting - Minecraft Server Hosting App**
          
          ✨ **New Features:**
          - 🎮 Advanced Server Control Panel (Darco-style)
            • Live console with command execution
            • File manager with editor capabilities  
            • Real-time server monitoring
            • Start/Stop/Restart controls
          
          - 🌐 Custom Domain Management
            • FREE .hosting.jp domain for all users
            • Paid domains: .fun (₹50), .com (₹100), .net (₹150), .in (₹200)
            • Easy domain-to-server connection
          
          - 💰 UPI Payment Integration
            • All payments go to: jaydendpenha@fam
            • QR code generation for mobile payments
            • Transaction ID verification
          
          - 🔐 Persistent Authentication
            • Stay logged in across sessions
            • Secure JWT token system
          
          - 🎨 Beautiful Modern UI
            • Glass morphism effects
            • Responsive design
            • Professional animations
          
          📱 **Installation Instructions:**
          1. Download the APK file below
          2. Enable "Install from Unknown Sources" in Android settings
          3. Install and start your Minecraft hosting business!
          
          💳 **Payment Info:** All transactions go to UPI ID: **jaydendpenha@fam**
          
          🆓 **Free Plan:** Get your first server free for 7 days + free .hosting.jp domain!
          
        files: |
          client/android/app/build/outputs/apk/debug/app-debug.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}